# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

build --experimental_cc_shared_library

build --define VCSID=vcsid-unspecified

build --conlyopt=-std=gnu11
build --cxxopt=-std=gnu++17

build --copt=-Wall --copt=-Werror

# Ensure assert() is executed.
build --copt=-UNDEBUG

# Pthread support
build --copt=-pthread --linkopt=-pthread

# b/201531268: LFS support
build --copt=-D_FILE_OFFSET_BITS=64
build --copt=-D_LARGEFILE_SOURCE
build --copt=-D_LARGEFILE64_SOURCE

# b/267242424: Keep null checks
build --copt=-fno-delete-null-pointer-checks

# go/cras-style#build-time-feature-switches
# NOTE: These flags don't work with gcc. So put them behind a config.
build:clang-strict --copt=-Werror=undef-prefix --copt=-Wundef-prefix=HAVE_,CRAS_

# Use system protobuf.
build --proto_compiler=//third_party/protobuf:system_protoc
build --proto_toolchain_for_cc=//third_party/protobuf:system_cc_toolchain

# --config=asan
# Enable AddressSanitizer.
build:asan --copt=-fsanitize=address --linkopt=-fsanitize=address

# --config=ubsan
# Enable UndefinedBehaviorSanitizer.
build:ubsan --copt=-fsanitize=undefined --linkopt=-fsanitize=undefined
build:ubsan --linkopt=-fsanitize-link-c++-runtime

# --config=tsan
# Enable ThreadSanitizer.
build:tsan --copt=-fsanitize=thread --linkopt=-fsanitize=thread
test:tsan --test_tag_filters=-tsan-broken

# --config=local-gcc
# Use system gcc to build.
build:local-gcc --action_env=CC=gcc --action_env=CXX=g++

# --config=local-clang
# Use system clang to build.
build:local-clang --action_env=CC=clang --action_env=CXX=clang++
build:local-clang --config=clang-strict

build:fuzzer --//:fuzzer --copt=-Wno-error=unused-function

build --copt=-Wno-error=sign-compare

# Always enable debug symbols.
build --copt=-g --linkopt=-g --strip=never

# CI flags
build:ci --show_progress_rate_limit=10
test:ci --test_output=errors
test:ci --test_summary=terse
